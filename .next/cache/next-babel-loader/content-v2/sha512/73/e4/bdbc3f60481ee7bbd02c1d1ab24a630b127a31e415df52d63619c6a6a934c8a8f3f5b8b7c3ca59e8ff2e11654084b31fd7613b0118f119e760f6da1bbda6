{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rujutabatavia/Documents/NEXTJS/nextjs-optimization/pages/events/[...slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { getFilteredEvents } from \"../../helpers/api-utils\";\nimport EventList from \"../../components/events/event-list\";\nimport ResultsTitle from \"../../components/events/results-title\";\nimport Button from \"../../components/ui/button\";\nimport ErrorAlert from \"../../components/ui/error-alert\";\nimport useSWR from \"swr\";\nimport Head from \"next/head\";\n\nfunction FilteredEventsPage(props) {\n  const {\n    0: loadedEvents,\n    1: setLoadedEvents\n  } = useState();\n  const router = useRouter();\n  const filterData = router.query.slug;\n  const {\n    data,\n    error\n  } = useSWR(\"https://nextjs-course-41026-default-rtdb.firebaseio.com/events.json\");\n  useEffect(() => {\n    if (data) {\n      const events = [];\n\n      for (const key in data) {\n        events.push(_objectSpread({\n          id: key\n        }, data[key]));\n      }\n\n      setLoadedEvents(events);\n    }\n  }, [data]);\n\n  if (!loadedEvents) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12 || error) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filter. Please adjust your values!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  const filteredEvents = loadedEvents.filter(event => {\n    const eventDate = new Date(event.date);\n    return eventDate.getFullYear() === numYear && eventDate.getMonth() === numMonth - 1;\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  const date = new Date(numYear, numMonth - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Filtered Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: `All events for ${numMonth}/${numYear}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const { params } = context;\n//   const filterData = params.slug;\n//   const filteredYear = filterData[0];\n//   const filteredMonth = filterData[1];\n//   const numYear = +filteredYear;\n//   const numMonth = +filteredMonth;\n//   if (\n//     isNaN(numYear) ||\n//     isNaN(numMonth) ||\n//     numYear > 2030 ||\n//     numYear < 2021 ||\n//     numMonth < 1 ||\n//     numMonth > 12\n//   ) {\n//     return {\n//       props: { hasError: true },\n//     };\n//   }\n//   const filteredEvents = await getFilteredEvents({\n//     year: numYear,\n//     month: numMonth,\n//   });\n//   return {\n//     props: {\n//       events: filteredEvents,\n//       date: {\n//         year: numYear,\n//         month: numMonth,\n//       },\n//     },\n//   };\n// }\n\n\nexport default FilteredEventsPage;","map":{"version":3,"sources":["/home/rujutabatavia/Documents/NEXTJS/nextjs-optimization/pages/events/[...slug].js"],"names":["Fragment","useState","useEffect","useRouter","getFilteredEvents","EventList","ResultsTitle","Button","ErrorAlert","useSWR","Head","FilteredEventsPage","props","loadedEvents","setLoadedEvents","router","filterData","query","slug","data","error","events","key","push","id","filteredYear","filteredMonth","numYear","numMonth","isNaN","filteredEvents","filter","event","eventDate","Date","date","getFullYear","getMonth","length"],"mappings":"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","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { getFilteredEvents } from \"../../helpers/api-utils\";\nimport EventList from \"../../components/events/event-list\";\nimport ResultsTitle from \"../../components/events/results-title\";\nimport Button from \"../../components/ui/button\";\nimport ErrorAlert from \"../../components/ui/error-alert\";\nimport useSWR from \"swr\";\nimport Head from \"next/head\";\n\nfunction FilteredEventsPage(props) {\n  const [loadedEvents, setLoadedEvents] = useState();\n  const router = useRouter();\n\n  const filterData = router.query.slug;\n\n  const { data, error } = useSWR(\n    \"https://nextjs-course-41026-default-rtdb.firebaseio.com/events.json\"\n  );\n  useEffect(() => {\n    if (data) {\n      const events = [];\n      for (const key in data) {\n        events.push({ id: key, ...data[key] });\n      }\n      setLoadedEvents(events);\n    }\n  }, [data]);\n\n  if (!loadedEvents) {\n    return <p className=\"center\">Loading...</p>;\n  }\n\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (\n    isNaN(numYear) ||\n    isNaN(numMonth) ||\n    numYear > 2030 ||\n    numYear < 2021 ||\n    numMonth < 1 ||\n    numMonth > 12 ||\n    error\n  ) {\n    return (\n      <Fragment>\n        <ErrorAlert>\n          <p>Invalid filter. Please adjust your values!</p>\n        </ErrorAlert>\n        <div className=\"center\">\n          <Button link=\"/events\">Show All Events</Button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  const filteredEvents = loadedEvents.filter((event) => {\n    const eventDate = new Date(event.date);\n    return (\n      eventDate.getFullYear() === numYear &&\n      eventDate.getMonth() === numMonth - 1\n    );\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return (\n      <Fragment>\n        <ErrorAlert>\n          <p>No events found for the chosen filter!</p>\n        </ErrorAlert>\n        <div className=\"center\">\n          <Button link=\"/events\">Show All Events</Button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  const date = new Date(numYear, numMonth - 1);\n\n  return (\n    <Fragment>\n      <Head>\n        <title>Filtered Events</title>\n        <meta\n          name=\"description\"\n          content={`All events for ${numMonth}/${numYear}`}\n        />\n      </Head>\n      <ResultsTitle date={date} />\n      <EventList items={filteredEvents} />\n    </Fragment>\n  );\n}\n\n// export async function getServerSideProps(context) {\n//   const { params } = context;\n//   const filterData = params.slug;\n//   const filteredYear = filterData[0];\n//   const filteredMonth = filterData[1];\n\n//   const numYear = +filteredYear;\n//   const numMonth = +filteredMonth;\n\n//   if (\n//     isNaN(numYear) ||\n//     isNaN(numMonth) ||\n//     numYear > 2030 ||\n//     numYear < 2021 ||\n//     numMonth < 1 ||\n//     numMonth > 12\n//   ) {\n//     return {\n//       props: { hasError: true },\n//     };\n//   }\n\n//   const filteredEvents = await getFilteredEvents({\n//     year: numYear,\n//     month: numMonth,\n//   });\n\n//   return {\n//     props: {\n//       events: filteredEvents,\n//       date: {\n//         year: numYear,\n//         month: numMonth,\n//       },\n//     },\n//   };\n// }\n\nexport default FilteredEventsPage;\n"]},"metadata":{},"sourceType":"module"}